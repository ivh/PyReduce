[build-system]
requires = ["hatchling>=1.25.0", "cffi>=1.17.1", "setuptools"]
build-backend = "hatchling.build"

[project]
name = "pyreduce-astro"
version = "0.6.0b3"
requires-python = ">=3.11"
description = "A data reduction package for echelle spectrographs"
readme = "README.md"
authors = [
    {name = "Ansgar Wehrhahn"},
    {name = "Thomas Marquart", email = "thomas.marquart@astro.uu.se"},
    {name = "Nikolai Piskunov"}
]
license = {text = "GPL-3.0-or-later"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Astronomy",
]

dependencies = [
    "cffi>=1.17.1",
    "numpy>=1.26.0",
    "matplotlib>=3.8.0",
    "scipy>=1.11.0",
    "astropy>=5.3.0",
    "colorlog>=6.8.0",
    "corner>=2.2.0",
    "emcee>=3.1.0",
    "joblib>=1.3.0",
    "jsonschema>=4.20.0",
    "spectres>=2.2.0",
    "python-dateutil>=2.8.0",
    "scikit-image>=0.22.0",
    "tqdm>=4.66.0",
    "wget>=3.2",
    "Pillow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.8.0",
    "pre-commit>=3.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "sphinx>=7.2.0",
    "setuptools",  # Required for CFFI compilation in tests (Python 3.12+)
]

[project.urls]
Homepage = "https://github.com/ivh/PyReduce"
Documentation = "https://pyreduce.readthedocs.io"
Repository = "https://github.com/ivh/PyReduce"
Issues = "https://github.com/ivh/PyReduce/issues"

# Hatch build configuration
[tool.hatch.build]
packages = ["pyreduce"]
exclude = [
    "/.git",
    "/.github",
    "/docs",
    "/tests",
    "*.pyc",
    "__pycache__",
]

# Include C source files and headers in the package
[tool.hatch.build.targets.wheel]
packages = ["pyreduce"]
include = [
    "pyreduce/**/*.py",
    "pyreduce/**/*.c",
    "pyreduce/**/*.h",
    "pyreduce/**/*.so",
    "pyreduce/**/*.json",
    "pyreduce/**/*.npz",
    "pyreduce/**/*.sav",
]
artifacts = [
    "pyreduce/clib/*.so",
]

# Build CFFI extensions via build hook
[tool.hatch.build.hooks.custom]
path = "hatch_build.py"

# Ruff - Modern Python linter and formatter
[tool.ruff]
line-length = 88
target-version = "py313"
extend-exclude = [
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "buck-out",
    "build",
    "dist",
    ".eggs",
    "__pycache__",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "E402",  # module import not at top (legitimate cases in __init__.py, conf.py)
    "E722",  # bare except (many legacy cases, would require significant refactoring)
    "UP031", # printf-style formatting (many cases in tools/ and examples/, low priority)
]

# Per-file ignores for specific cases
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports are intentional for re-exports
"docs/conf.py" = ["E402"]  # imports after sys.path modification
"tools/**" = ["UP031", "B904"]  # legacy tools, lower priority
"examples/**" = ["UP031"]  # examples can use simpler syntax

[tool.ruff.lint.isort]
known-first-party = ["pyreduce"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["test"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Fast unit tests with synthetic data (no downloads)",
    "instrument: Integration tests using real instrument datasets",
    "slow: Tests taking >5 seconds",
    "downloads: Tests that download sample datasets",
]

# Coverage configuration
[tool.coverage.run]
source = ["pyreduce"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Development dependency groups
[dependency-groups]
dev = [
    "ruff>=0.8.0",
    "pre-commit>=3.5.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "sphinx>=7.2.0",
]
